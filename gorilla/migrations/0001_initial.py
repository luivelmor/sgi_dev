# Generated by Django 3.1.4 on 2021-05-07 10:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventId', models.CharField(max_length=5, unique=True, verbose_name='Event ID')),
                ('description', models.CharField(max_length=1000, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Manifest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default_manifest', max_length=100, unique=True, verbose_name='Name')),
                ('ip', models.CharField(default='', max_length=15, unique=True, verbose_name='IP Address')),
                ('last_connection', models.DateTimeField(null=True, verbose_name='Last connection')),
                ('place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.place', verbose_name='Place')),
            ],
            options={
                'verbose_name': 'Manifest',
                'verbose_name_plural': 'Manifests',
            },
        ),
        migrations.CreateModel(
            name='ProxyDeviceModelDriverFile',
            fields=[
            ],
            options={
                'verbose_name': 'Driver relation',
                'verbose_name_plural': 'Drivers relation',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('inventory.devicemodeldriverfile',),
        ),
        migrations.CreateModel(
            name='ToolWizStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ON', 'ON'), ('OFF', 'OFF')], max_length=100, verbose_name='Status')),
                ('last_connection', models.DateTimeField(null=True, verbose_name='Last connection')),
                ('manifest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manifest', to='gorilla.manifest', verbose_name='Manifest')),
            ],
            options={
                'verbose_name': 'Congelar/Descongelar',
                'verbose_name_plural': 'Congelar/Descongelar',
            },
        ),
        migrations.CreateModel(
            name='ScreenResolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.CharField(default='', max_length=4, verbose_name='X')),
                ('y', models.CharField(default='', max_length=4, verbose_name='Y')),
                ('manifest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gorilla.manifest', verbose_name='Manifest')),
            ],
            options={
                'verbose_name': 'ScreenResolution',
                'verbose_name_plural': 'ScreenResolutions',
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entryType', models.CharField(default='', max_length=50, verbose_name='Entry Type')),
                ('timeWritten', models.DateTimeField(null=True, verbose_name='Time Written')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event', to='gorilla.event', verbose_name='Event')),
                ('manifest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manifest_event_log', to='gorilla.manifest', verbose_name='Manifest')),
            ],
            options={
                'verbose_name': 'Event Log',
                'verbose_name_plural': 'Events Logs',
                'unique_together': {('manifest', 'event', 'timeWritten')},
            },
        ),
    ]
